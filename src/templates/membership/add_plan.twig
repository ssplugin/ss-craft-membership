{% extends "ss-membership/layout/main" %}

{% import "_includes/forms" as forms %}

{# The title of this CP section #}
{% set title = "Add Membership Plan" %}
{# The content of the CP Section#}
{% set content %}
	{% set userGroups = craft.app.userGroups.getAllGroups() %}
    <p class="error">Note: Subscription Amount and Interval not changable after plan has been created.</p>
    <form method="POST">
    	{{ csrfInput() }}
        {{ actionInput('ss-membership/membership/update-or-create') }}
        {{ redirectInput('ss-membership/membership/add') }}
        <input type="hidden" name="liveMode" value="1">
        {{ forms.textField({
            label: 'Subscription plan name',
            instructions: 'Membership name for the site.',
            id: 'name',
            name: 'name',
            first: true,
            errors: membership.getErrors('name'),
            value: membership.name,
            required: true
        }) }}

        {{ forms.textField({
            label: 'Subscription Amount',
            instructions: 'Subscription amount in USD ( Currency ). i.e $99 or $199',
            id: 'amount',
            name: 'amount',
            errors: membership.getErrors('amount'),
            value: membership.amount,
            first: true,
            required: true
        }) }}

	    {{ forms.selectField({
	        label: 'Subscription Interval',
	        instructions: "Please select interval of subscription",
	        id: "interval",
	        name: "interval",
            errors: membership.getErrors('interval'),
	        options: {week:'Weekly', month:'Monthly', year:'Yearly'},
            value: membership.interval,
	        required: true
	    }) }}

	    {{ forms.selectField({
	        label: 'User Group',
	        instructions: "When subscription subscribed, This user group will be assigned to the user",
	        id: "userGroupId",
	        name: "userGroupId",
            errors: membership.getErrors('userGroupId'),
	        options: userGroups | map((ug) => { value: ug.id, label: ug.name }),
            value: membership.userGroupId,
	        required: true
	    }) }}

        {{ forms.lightswitchField({
            label: "Status",
            instructions: "Status of subscription plan",
            name: "enabled",
            on: 1,
            required: true
        }) }}

        <input type="submit" class="btn submit" value="Save">&nbsp;&nbsp;
	    <a href="{{ cpUrl('ss-membership/membership')}}" class="btn light flex-grow">Cancel</a>
    </form>
{% endset %}
